[DEFAULT]

#
# Amount of disk resources in MB to make them always available to host. The
# disk usage gets reported back to the scheduler from nova-compute running
# on the compute nodes. To prevent the disk resources from being considered
# as available, this option can be used to reserve disk space for that host. For
# more information, refer to the documentation. (integer value)
# Minimum value: 0
#reserved_host_disk_mb = 0

#
# Amount of memory in MB to reserve for the host so that it is always available
# to host processes. The host resources usage is reported back to the scheduler
# continuously from nova-compute running on the compute node. To prevent the
# host
# memory from being considered as available, this option is used to reserve
# memory for the host. For more information, refer to the documentation.
# (integer value)
# Minimum value: 0
reserved_host_memory_mb = 8192

#
# Number of host CPUs to reserve for host processes. For more information, refer
# to the documentation. (integer value)
# Minimum value: 0
reserved_host_cpus = 4

#
# Virtual CPU to physical CPU allocation ratio. For more information, refer to
# the documentation. (floating point value)
# Minimum value: 0.0
cpu_allocation_ratio = 4.0

#
# Virtual RAM to physical RAM allocation ratio. For more information, refer to
# the documentation. (floating point value)
# Minimum value: 0.0
ram_allocation_ratio = 2.0

#
# Virtual disk to physical disk allocation ratio. For more information, refer to
# the documentation. (floating point value)
# Minimum value: 0.0
#disk_allocation_ratio = <None>

#
# Initial virtual CPU to physical CPU allocation ratio. For more information,
# refer to the documentation. (floating point value)
# Minimum value: 0.0
#initial_cpu_allocation_ratio = 4.0

#
# Initial virtual RAM to physical RAM allocation ratio. For more information,
# refer to the documentation. (floating point value)
# Minimum value: 0.0
#initial_ram_allocation_ratio = 1.0

#
# Initial virtual disk to physical disk allocation ratio. For more information,
# refer to the documentation. (floating point value)
# Minimum value: 0.0
#initial_disk_allocation_ratio = 1.0





[quota]
#
# Quota options allow to manage quotas in openstack deployment.

#
# From nova.conf
#

#
# The number of instances allowed per project. For more information, refer to
# the documentation. (integer value)
# Minimum value: -1
# Deprecated group/name - [DEFAULT]/quota_instances
#instances = 10
instances = -1

#
# The number of instance cores or vCPUs allowed per project. For more
# information, refer to the documentation. (integer value)
# Minimum value: -1
# Deprecated group/name - [DEFAULT]/quota_cores
#cores = 20
cores = -1

#
# The number of megabytes of instance RAM allowed per project. For more
# information, refer to the documentation. (integer value)
# Minimum value: -1
# Deprecated group/name - [DEFAULT]/quota_ram
#ram = 51200
ram = 102400

#
# The number of metadata items allowed per instance. For more information, refer
# to the documentation. (integer value)
# Minimum value: -1
# Deprecated group/name - [DEFAULT]/quota_metadata_items
#metadata_items = 128

#
# The number of injected files allowed. For more information, refer to the
# documentation. (integer value)
# Minimum value: -1
# Deprecated group/name - [DEFAULT]/quota_injected_files
#injected_files = 5

#
# The number of bytes allowed per injected file. For more information, refer to
# the documentation. (integer value)
# Minimum value: -1
# Deprecated group/name - [DEFAULT]/quota_injected_file_content_bytes
#injected_file_content_bytes = 10240

#
# The maximum allowed injected file path length. For more information, refer to
# the documentation. (integer value)
# Minimum value: -1
# Deprecated group/name - [DEFAULT]/quota_injected_file_path_length
#injected_file_path_length = 255

#
# The maximum number of key pairs allowed per user. For more information, refer
# to the documentation. (integer value)
# Minimum value: -1
# Deprecated group/name - [DEFAULT]/quota_key_pairs
#key_pairs = 100

#
# The maximum number of server groups per project. For more information, refer
# to the documentation. (integer value)
# Minimum value: -1
# Deprecated group/name - [DEFAULT]/quota_server_groups
#server_groups = 10

#
# The maximum number of servers per server group. For more information, refer to
# the documentation. (integer value)
# Minimum value: -1
# Deprecated group/name - [DEFAULT]/quota_server_group_members
#server_group_members = 10

#
# Provides abstraction for quota checks. Users can configure a specific
# driver to use for quota checks.
#  (string value)
# Possible values:
# nova.quota.DbQuotaDriver - (deprecated) Stores quota limit information in the
# database and relies on the ``quota_*`` configuration options for default quota
# limit values. Counts quota usage on-demand.
# nova.quota.NoopQuotaDriver - Ignores quota and treats all resources as
# unlimited.
# nova.quota.UnifiedLimitsDriver - Uses Keystone unified limits to store quota
# limit information and relies on resource usage counting from Placement. Counts
# quota usage on-demand. Resources missing unified limits in Keystone will be
# treated as a quota limit of 0, so it is important to ensure all resources have
# registered limits in Keystone. The ``nova-manage limits
# migrate_to_unified_limits`` command can be used to copy existing quota limits
# from the Nova database to Keystone unified limits via the Keystone API.
# Alternatively, unified limits can be created manually using the
# OpenStackClient or by calling the Keystone API directly.
#driver = nova.quota.DbQuotaDriver

#
# Recheck quota after resource creation to prevent allowing quota to be
# exceeded. For more information, refer to the documentation. (boolean value)
#recheck_quota = true

#
# Enable the counting of quota usage from the placement service. For more
# information, refer to the documentation. (boolean value)
#count_usage_from_placement = false

#
# Specify the semantics of the ``unified_limits_resource_list``. For more
# information, refer to the documentation. (string value)
# Possible values:
# require - Require the resources in ``unified_limits_resource_list`` to have
# registered limits set in Keystone
# ignore - Ignore the resources in ``unified_limits_resource_list`` if they do
# not have registered limits set in Keystone
#unified_limits_resource_strategy = require

#
# Specify a list of resources to require or ignore registered limits. For more
# information, refer to the documentation. (list value)
#unified_limits_resource_list = servers
